version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - LOG_LEVEL=debug
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
    volumes:
      - ./backend:/app
      - go_modules:/go/pkg/mod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (à développer)
  frontend:
    image: node:18-alpine
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx reverse proxy (optionnel)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  go_modules:
  node_modules:

networks:
  default:
    name: devops-converter-network
